pipeline {
    agent any

    stages {
        stage('Deploy to Kubernetes') {
            steps {
                script {
                    // DÃ©ploiement Kubernetes
                    def deployment = """
                    apiVersion: apps/v1
                    kind: Deployment
                    metadata:
                      name: my-webapp
                    spec:
                      replicas: 2
                      selector:
                        matchLabels:
                          app: my-webapp
                      template:
                        metadata:
                          labels:
                            app: my-webapp
                        spec:
                          containers:
                          - name: my-webapp
                            image: my-webapp:latest
                            ports:
                            - containerPort: 80
                    """
                    
                    // Service Kubernetes en mode NodePort
                    def service = """
                    apiVersion: v1
                    kind: Service
                    metadata:
                      name: my-webapp
                    spec:
                      type: NodePort
                      selector:
                        app: my-webapp
                      ports:
                      - port: 80
                        targetPort: 80
                    """
                    
                    // Appliquer les ressources Kubernetes avec kubectl
                    withKubeConfig([credentialsId: 'kubeconfig']) {
                        kubernetesDeploy(manifests: [deployment, service])
                    }
                }
            }
        }
    }
}
